{"version":3,"sources":["components/Graph.js","components/DatePicker.js","App.js","index.js"],"names":["Graph","props","labels","i","Object","keys","data","length","push","toString","tit","title","usage","map","day","state","reduce","a","b","datasets","label","fontSize","fill","lineTension","backgroundColor","borderColor","color","borderWidth","className","height","width","options","display","text","legend","position","maintainAspectRatio","DatePicker","value","date","onChange","e","month","toLocaleString","year","getFullYear","monthYear","toLowerCase","console","log","monthList","setDate","App","useState","Date","userName","userData","dayData","jsonTopic","jsonSubTopic","key","april2021","topics","jsonData","jsonKey","subTopics","jsonKeyValue","split","assign","graphs","id","class","graph","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.947e4fb5.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\nimport \"../static/graphs.css\"\r\n\r\n\r\nfunction Graph(props) {\r\n    const labels = [];\r\n    for (let i = 1; i <= (Object.keys(props.data)).length; ++i) {\r\n        labels.push(i.toString());\r\n    }\r\n    const tit = props.title\r\n\r\n  const usage = (Object.keys(props.data)).map(day => (props.data[day])[tit])\r\n  const total = usage.reduce((a,b) => a+b,0)\r\n    const state = {\r\n        labels: labels,\r\n        datasets: [\r\n          {\r\n            label: props.title,\r\n            fontSize: 16,\r\n            fill: false,\r\n            lineTension: 0.5,\r\n            backgroundColor: 'rgba(75,0,0,1)',\r\n            borderColor: props.color,\r\n            borderWidth: 2,\r\n            data: usage\r\n          }\r\n        ]\r\n      }\r\n    return (\r\n      <div className=\"graphs\">\r\n        <h2 >{props.title }</h2>\r\n    \r\n        <Line\r\n          height={400}\r\n          width={550}\r\n          data={state}\r\n          options={{\r\n            title:{\r\n              display:true,\r\n              text:'Average Usage per month',\r\n              fontSize:20\r\n            },\r\n            legend:{\r\n              display:true,\r\n              position:'top'\r\n            },\r\n            maintainAspectRatio: true\r\n          }}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Graph;\r\n","import React from 'react'\r\nimport Datepicker from 'react-date-picker'\r\n\r\nfunction DatePicker(props) {\r\n\tconst handleDateChange = (e) => {\r\n\t\tconst month = e.toLocaleString('default', { month: 'long' })\r\n\t\tconst year = e.getFullYear()\r\n\t\tconst monthYear = (month.toLowerCase() + year)\r\n\t\tconsole.log(monthYear, props.monthList)\r\n\t\tif (monthYear in props.monthList===true) {\r\n\t\t\tprops.setDate(e)\r\n\t\t}\r\n\t\t\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h3>Select Month</h3>\r\n\t\t\t<Datepicker value={props.date} onChange={ handleDateChange }/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DatePicker\r\n\r\n","import React, {useState} from 'react';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\nimport './App.css';\nimport Graph from './components/Graph';\nimport DatePicker from './components/DatePicker';\nimport data from './data/data.json';\n\nfunction App() {\n  const [date, setDate] = useState(new Date())\n  const month = date.toLocaleString('default', { month: 'long' })\n  const userName = Object.keys(data)[0]\n  const year = date.getFullYear()\n  const monthYear = (month.toLowerCase() + year)\n\n  const userData = data[\"Satyam Kumar\"]\n  const dayData = userData[monthYear]\n  \n  var jsonTopic = ''\n  var jsonSubTopic = ''\n  \n\n\n  for (var key in userData.april2021) {\n    var topics = {}\n    \n    var jsonData = userData.april2021[key]\n    for (var jsonKey in jsonData)\n    {\n      var subTopics = {}\n      const jsonKeyValue = jsonKey\n      jsonKey = jsonKey.split(\"/\")\n     \n      if (jsonKey.length === 2) {\n        jsonSubTopic = jsonKey[1]\n        jsonTopic = jsonKey[0]\n      } else {\n        jsonTopic = jsonKey[0]\n        jsonSubTopic = 'total'\n      }\n      \n      subTopics[jsonSubTopic] = jsonData[jsonKeyValue]\n      \n      topics[jsonTopic] = Object.assign({}, topics[jsonTopic], subTopics) \n      \n    }\n    \n    console.log(topics, \"topic\")\n    userData.april2021[key] = topics\n    \n\n  } console.log(userData.april2021)\n    const graphs = Object.keys(dayData[\"day01\"])\n  return (\n    <div className=\"App\" id=\"app\">\n      <div class=\"container-fluid\">\n        <h1 className=\"heading\">Vedic Api Daily Usage</h1>\n        <div className=\"container-fluid dashboard\" >\n          <div className=\"sidebar card\">\n            <div className=\"user\">\n            <h2 className=\"userName\">{ userName }</h2>\n            <h4>Api usage for month { month }</h4>\n            </div>\n            \n            <DatePicker date={date} setDate={setDate} monthList={userData}/>\n            \n          </div>\n          \n          <section className={\"container\"}>\n            <ul class=\"grid-wrapper\">\n              {graphs.map((graph) => <li><Graph title={graph} color={\"black\"} data={dayData} /></li> )}\n         \n      </ul>\n  </section>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}