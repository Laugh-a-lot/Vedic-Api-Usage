{"version":3,"sources":["components/Graph.js","components/PieChart.js","components/DatePicker.js","App.js","index.js"],"names":["Graph","props","labels","i","Object","keys","data","length","push","toString","tit","title","usage","map","day","total","reduce","a","b","state","datasets","label","fontSize","fill","lineTension","backgroundColor","borderColor","color","borderWidth","className","height","width","options","display","text","legend","position","maintainAspectRatio","PieChart","days","date","getDate","daysdata","hoverBackgroundColor","responsive","DatePicker","value","onChange","e","month","toLocaleString","year","getFullYear","monthYear","toLowerCase","console","log","monthList","setDate","App","useState","Date","userName","userData","dayData","graphs","id","class","graph","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAsDeA,MAjDf,SAAeC,GAEX,IADA,IAAMC,EAAS,GACNC,EAAI,EAAGA,GAAMC,OAAOC,KAAKJ,EAAMK,MAAOC,SAAUJ,EACrDD,EAAOM,KAAKL,EAAEM,YAElB,IAAMC,EAAMT,EAAMU,MACdC,EAASR,OAAOC,KAAKJ,EAAMK,MAAOO,KAAI,SAAAC,GAAG,OAAKb,EAAMK,KAAKQ,GAAMJ,MAC/DK,EAAQH,EAAMI,QAAO,SAACC,EAAEC,GAAH,OAASD,EAAEC,IAAE,GAChCC,EAAQ,CACVjB,OAAQA,EACRkB,SAAU,CACR,CACEC,MAAOpB,EAAMU,MACbW,SAAU,GACVC,MAAM,EACNC,YAAa,GACbC,gBAAiB,iBACjBC,YAAazB,EAAM0B,MACnBC,YAAa,EACbtB,KAAMM,KAId,OACE,sBAAKiB,UAAU,SAAf,UACE,6BAAM5B,EAAMU,QACZ,+CAAoBI,KAEpB,cAAC,OAAD,CACEe,OAAQ,IACRC,MAAO,IACPzB,KAAMa,EACNa,QAAS,CACPrB,MAAM,CACJsB,SAAQ,EACRC,KAAK,0BACLZ,SAAS,IAEXa,OAAO,CACLF,SAAQ,EACRG,SAAS,OAEXC,qBAAqB,SCoBlBC,MAhEf,SAAkBrC,GAChB,IAAMa,EAAMV,OAAOC,KAAKJ,EAAMsC,MAAMtC,EAAMuC,KAAKC,WACzCC,EAAWzC,EAAMsC,KAAKzB,GACtBK,EAAQ,CACZjB,OAAQ,CACN,kBACA,uBACA,sBACA,qBACA,sBAEFkB,SAAU,CACR,CACEC,MAAO,QACPI,gBAAiB,CACf,UACA,UACA,UACA,UACA,WAEFkB,qBAAsB,CACpB,UACA,UACA,UACA,UACA,WAEFrC,KAAM,CACJoC,EAAS,wBACTA,EAAS,mBACTA,EAAS,uBACTA,EAAS,sBACTA,EAAS,0BAMjB,OACE,8BACE,cAAC,MAAD,CACEb,UAAU,YAEVvB,KAAMa,EACNa,QAAS,CACPY,YAAY,EACZP,qBAAqB,EAErB1B,MAAO,CACLsB,SAAS,EACTC,KAAM,oBACNZ,SAAU,IAEZa,OAAQ,CACNF,SAAS,EACTG,SAAU,e,iBCrCPS,MAnBf,SAAoB5C,GAWnB,OACC,gCACC,8CACA,cAAC,IAAD,CAAY6C,MAAO7C,EAAMuC,KAAMO,SAbR,SAACC,GACzB,IAAMC,EAAQD,EAAEE,eAAe,UAAW,CAAED,MAAO,SAC7CE,EAAOH,EAAEI,cACTC,EAAaJ,EAAMK,cAAgBH,EACzCI,QAAQC,IAAIH,EAAWpD,EAAMwD,WACzBJ,KAAapD,EAAMwD,aAAY,GAClCxD,EAAMyD,QAAQV,U,QCsCFW,MAxCf,WAAgB,IAAD,EACWC,mBAAS,IAAIC,MADxB,mBACNrB,EADM,KACAkB,EADA,KAEPT,EAAQT,EAAKU,eAAe,UAAW,CAAED,MAAO,SAChDa,EAAW1D,OAAOC,KAAKC,GAAM,GAC7B6C,EAAOX,EAAKY,cACZW,EAAWzD,EAAK,gBAGhB0D,EAAUD,EADGd,EAAMK,cAAgBH,GAEnCc,EAAS7D,OAAOC,KAAK2D,EAAO,OAGlC,OADAT,QAAQC,IAAIS,GAEV,qBAAKpC,UAAU,MAAMqC,GAAG,MAAxB,SACE,sBAAKC,MAAM,kBAAX,UACE,oBAAItC,UAAU,UAAd,mCACA,sBAAKA,UAAU,4BAAf,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,OAAf,UACA,oBAAIA,UAAU,WAAd,SAA2BiC,IAC3B,sDAA0Bb,QAG1B,cAAC,EAAD,CAAUpB,UAAU,YAAYW,KAAMA,EAAMD,KAAMyB,IAClD,cAAC,EAAD,CAAYxB,KAAMA,EAAMkB,QAASA,EAASD,UAAWM,OAIvD,yBAASlC,UAAW,YAApB,SACE,oBAAIsC,MAAM,eAAV,SACGF,EAAOpD,KAAI,SAACuD,GAAD,OAAW,6BAAI,cAAC,EAAD,CAAOzD,MAAOyD,EAAOzC,MAAO,QAASrB,KAAM0D,sBClCpFK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.7ec626d2.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\nimport \"../static/graphs.css\"\r\n\r\n\r\nfunction Graph(props) {\r\n    const labels = [];\r\n    for (let i = 1; i <= (Object.keys(props.data)).length; ++i) {\r\n        labels.push(i.toString());\r\n    }\r\n    const tit = props.title\r\n  const usage = (Object.keys(props.data)).map(day => (props.data[day])[tit])\r\n  const total = usage.reduce((a,b) => a+b,0)\r\n    const state = {\r\n        labels: labels,\r\n        datasets: [\r\n          {\r\n            label: props.title,\r\n            fontSize: 16,\r\n            fill: false,\r\n            lineTension: 0.5,\r\n            backgroundColor: 'rgba(75,0,0,1)',\r\n            borderColor: props.color,\r\n            borderWidth: 2,\r\n            data: usage\r\n          }\r\n        ]\r\n      }\r\n    return (\r\n      <div className=\"graphs\">\r\n        <h2 >{props.title }</h2>\r\n        <h3 >Total Usage: { total}</h3>\r\n    \r\n        <Line\r\n          height={400}\r\n          width={550}\r\n          data={state}\r\n          options={{\r\n            title:{\r\n              display:true,\r\n              text:'Average Usage per month',\r\n              fontSize:20\r\n            },\r\n            legend:{\r\n              display:true,\r\n              position:'top'\r\n            },\r\n            maintainAspectRatio: true\r\n          }}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Graph;\r\n","import React from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\n\r\nfunction PieChart(props) {\r\n  const day = Object.keys(props.days)[props.date.getDate()]\r\n  const daysdata = props.days[day]\r\n  const state = {\r\n    labels: [\r\n      \"horoscope/vedic\",\r\n      \"horoscope/chartimage\",\r\n      \"prediction/dailysun\",\r\n      \"matching/ashtakoot\",\r\n      \"matching/papasamya\",\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: \"Usage\",\r\n        backgroundColor: [\r\n          \"#B21F00\",\r\n          \"#C9DE00\",\r\n          \"#2FDE00\",\r\n          \"#00A6B4\",\r\n          \"#6800B4\",\r\n        ],\r\n        hoverBackgroundColor: [\r\n          \"#501800\",\r\n          \"#4B5000\",\r\n          \"#175000\",\r\n          \"#003350\",\r\n          \"#35014F\",\r\n        ],\r\n        data: [\r\n          daysdata[\"horoscope/chartimage\"],\r\n          daysdata[\"horoscope/vedic\"],\r\n          daysdata[\"prediction/dailysun\"],\r\n          daysdata[\"matching/ashtakoot\"],\r\n          daysdata[\"matching/papasamya\"],\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div >\r\n      <Pie\r\n        className=\"container\"\r\n        \r\n        data={state}\r\n        options={{\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n\r\n          title: {\r\n            display: true,\r\n            text: \"Api calls per day\",\r\n            fontSize: 20,\r\n          },\r\n          legend: {\r\n            display: true,\r\n            position: \"right\",\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PieChart;\r\n","import React from 'react'\r\nimport Datepicker from 'react-date-picker'\r\n\r\nfunction DatePicker(props) {\r\n\tconst handleDateChange = (e) => {\r\n\t\tconst month = e.toLocaleString('default', { month: 'long' })\r\n\t\tconst year = e.getFullYear()\r\n\t\tconst monthYear = (month.toLowerCase() + year)\r\n\t\tconsole.log(monthYear, props.monthList)\r\n\t\tif (monthYear in props.monthList===true) {\r\n\t\t\tprops.setDate(e)\r\n\t\t}\r\n\t\t\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h3>Select Month</h3>\r\n\t\t\t<Datepicker value={props.date} onChange={ handleDateChange }/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DatePicker\r\n\r\n","import React, {useState} from 'react';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\nimport './App.css';\nimport Graph from './components/Graph';\nimport PieChart from './components/PieChart';\nimport DatePicker from './components/DatePicker';\nimport data from './data/data.json';\n\nfunction App() {\n  const [date, setDate] = useState(new Date())\n  const month = date.toLocaleString('default', { month: 'long' })\n  const userName = Object.keys(data)[0]\n  const year = date.getFullYear()\n  const userData = data[\"Satyam Kumar\"]\n  \n  const monthYear = (month.toLowerCase() + year)\n  const dayData = userData[monthYear]\n  const graphs = Object.keys(dayData[\"day01\"])\n\n  console.log(graphs)\n  return (\n    <div className=\"App\" id=\"app\">\n      <div class=\"container-fluid\">\n        <h1 className=\"heading\">Vedic Api Daily Usage</h1>\n        <div className=\"container-fluid dashboard\" >\n          <div className=\"sidebar card\">\n            <div className=\"user\">\n            <h2 className=\"userName\">{ userName }</h2>\n            <h4>Api usage for month { month }</h4>\n            </div>\n            \n            <PieChart className=\"container\" date={date} days={dayData} />\n            <DatePicker date={date} setDate={setDate} monthList={userData}/>\n            \n          </div>\n          \n          <section className={\"container\"}>\n            <ul class=\"grid-wrapper\">\n              {graphs.map((graph) => <li><Graph title={graph} color={\"black\"} data={dayData} /></li> )}\n         \n      </ul>\n  </section>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}